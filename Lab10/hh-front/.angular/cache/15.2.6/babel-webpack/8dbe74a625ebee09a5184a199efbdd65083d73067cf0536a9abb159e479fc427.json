{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/company.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CompaniesComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function CompaniesComponent_li_10_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const company_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteCompany(company_r1.id));\n    });\n    i0.ɵɵtext(3, \"X\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const company_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", company_r1.id, \" - \", company_r1.name, \" \");\n  }\n}\nexport class CompaniesComponent {\n  constructor(companyService) {\n    this.companyService = companyService;\n    this.companies = [];\n    this.newCompany = '';\n  }\n  ngOnInit() {\n    this.companyService.getCompanies().subscribe(companies => {\n      this.companies = companies;\n    });\n  }\n  addCompany() {\n    this.companyService.createCompany(this.newCompany).subscribe(company => {\n      this.companies.push(company);\n      this.newCompany = '';\n    });\n  }\n  deleteCompany(company_id) {\n    this.companyService.deleteCompany(company_id).subscribe(data => {\n      this.companies = this.companies.filter(company => company.id !== company_id);\n    });\n  }\n}\nCompaniesComponent.ɵfac = function CompaniesComponent_Factory(t) {\n  return new (t || CompaniesComponent)(i0.ɵɵdirectiveInject(i1.CompanyService));\n};\nCompaniesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CompaniesComponent,\n  selectors: [[\"app-companies\"]],\n  decls: 11,\n  vars: 2,\n  consts: [[1, \"companies\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function CompaniesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Categories\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"fieldset\")(4, \"label\");\n      i0.ɵɵtext(5, \"Category name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function CompaniesComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.newCompany = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function CompaniesComponent_Template_button_click_7_listener() {\n        return ctx.addCompany();\n      });\n      i0.ɵɵtext(8, \"Add company\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"ul\");\n      i0.ɵɵtemplate(10, CompaniesComponent_li_10_Template, 4, 2, \"li\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCompany);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.companies);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".compamies[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcGFuaWVzL2NvbXBhbmllcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbXBhbWllc3tcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAUIA,0BAAsC;IACpCA,YAAkC;IAAAA,iCAA4C;IAApCA;MAAA;MAAA;MAAA;MAAA,OAASA,kDAAyB;IAAA,EAAC;IAACA,iBAAC;IAAAA,iBAAS;;;;IAAxFA,eAAkC;IAAlCA,sEAAkC;;;ACFxC,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAHlC,cAAS,GAAc,EAAE;IACzB,eAAU,GAAW,EAAE;EAGvB;EAEAC,QAAQ;IACN,IAAI,CAACD,cAAc,CAACE,YAAY,EAAE,CAACC,SAAS,CAAEC,SAAS,IAAI;MACzD,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,CAAC;EACJ;EAEAC,UAAU;IACR,IAAI,CAACL,cAAc,CAACM,aAAa,CAAC,IAAI,CAACC,UAAU,CAAC,CAACJ,SAAS,CAAEK,OAAO,IAAI;MACvE,IAAI,CAACJ,SAAS,CAACK,IAAI,CAACD,OAAO,CAAC;MAC5B,IAAI,CAACD,UAAU,GAAG,EAAE;IACtB,CAAC,CAAC;EACJ;EAEAG,aAAa,CAACC,UAAkB;IAC9B,IAAI,CAACX,cAAc,CAACU,aAAa,CAACC,UAAU,CAAC,CAACR,SAAS,CAAES,IAAI,IAAI;MAC/D,IAAI,CAACR,SAAS,GAAG,IAAI,CAACA,SAAS,CAACS,MAAM,CAAEL,OAAO,IAAKA,OAAO,CAACM,EAAE,KAAKH,UAAU,CAAC;IAChF,CAAC,CAAC;EACJ;;AAxBWb,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT/BtB,0BAAI;MAAAA,0BAAU;MAAAA,iBAAK;MAEnBA,8BAAuB;MAEZA,+BAAe;MAAAA,iBAAQ;MAC9BA,gCAA4C;MAAzBA;QAAA;MAAA,EAAwB;MAA3CA,iBAA4C;MAC5CA,iCAA+B;MAAvBA;QAAA,OAASuB,gBAAY;MAAA,EAAC;MAACvB,2BAAW;MAAAA,iBAAS;MAGrDA,0BAAI;MACFA,mEAEK;MACPA,iBAAK;;;MARgBA,eAAwB;MAAxBA,wCAAwB;MAKnBA,eAAY;MAAZA,uCAAY","names":["i0","CompaniesComponent","constructor","companyService","ngOnInit","getCompanies","subscribe","companies","addCompany","createCompany","newCompany","company","push","deleteCompany","company_id","data","filter","id","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Asus\\Web Dev\\lab10\\hh-front\\src\\app\\companies\\companies.component.html","C:\\Users\\Asus\\Web Dev\\lab10\\hh-front\\src\\app\\companies\\companies.component.ts"],"sourcesContent":["<h1>Categories</h1>\n\n<div class=\"companies\">\n  <fieldset>\n    <label>Category name: </label>\n    <input type=\"text\" [(ngModel)]=\"newCompany\">\n    <button (click)=\"addCompany()\">Add company</button>\n  </fieldset>\n\n  <ul>\n    <li *ngFor=\"let company of companies\">\n      {{company.id}} - {{company.name}} <button (click)=\"deleteCompany(company.id)\">X</button>\n    </li>\n  </ul>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Company} from \"../models\";\nimport {CompanyService} from \"../services/company.service\";\n\n@Component({\n  selector: 'app-companies',\n  templateUrl: './companies.component.html',\n  styleUrls: ['./companies.component.css']\n})\nexport class CompaniesComponent implements OnInit{\n  companies: Company[] = [];\n  newCompany: string = '';\n\n  constructor(private companyService: CompanyService) {\n  }\n\n  ngOnInit() {\n    this.companyService.getCompanies().subscribe((companies) => {\n      this.companies = companies;\n    });\n  }\n\n  addCompany() {\n    this.companyService.createCompany(this.newCompany).subscribe((company) => {\n      this.companies.push(company);\n      this.newCompany = '';\n    });\n  }\n\n  deleteCompany(company_id: number) {\n    this.companyService.deleteCompany(company_id).subscribe((data) => {\n      this.companies = this.companies.filter((company) => company.id !== company_id);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}