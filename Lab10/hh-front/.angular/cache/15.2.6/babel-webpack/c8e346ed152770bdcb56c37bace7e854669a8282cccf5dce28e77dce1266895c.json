{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/company.service\";\nimport * as i2 from \"@angular/common\";\nfunction CompaniesComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function CompaniesComponent_li_4_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const company_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteCompany(company_r1.id));\n    });\n    i0.ɵɵtext(3, \"X\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const company_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", company_r1.id, \" - \", company_r1.name, \" \");\n  }\n}\nexport class CompaniesComponent {\n  constructor(companyService) {\n    this.companyService = companyService;\n    this.companies = [];\n    this.newCompany = '';\n  }\n  // ngOnInit() {\n  //   this.companyService.getCompanies().subscribe((companies) => {\n  //     this.companies = companies;\n  //   });\n  // }\n  addCompany() {\n    this.companyService.createCompany(this.newCompany).subscribe(company => {\n      this.companies.push(company);\n      this.newCompany = '';\n    });\n  }\n  deleteCompany(company_id) {\n    this.companyService.deleteCompany(company_id).subscribe(data => {\n      this.companies = this.companies.filter(company => company.id !== company_id);\n    });\n  }\n}\nCompaniesComponent.ɵfac = function CompaniesComponent_Factory(t) {\n  return new (t || CompaniesComponent)(i0.ɵɵdirectiveInject(i1.CompanyService));\n};\nCompaniesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CompaniesComponent,\n  selectors: [[\"app-companies\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"companies\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n  template: function CompaniesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Categories\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"ul\");\n      i0.ɵɵtemplate(4, CompaniesComponent_li_4_Template, 4, 2, \"li\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.companies);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAUIA,0BAAsC;IACpCA,YAAkC;IAAAA,iCAA4C;IAApCA;MAAA;MAAA;MAAA;MAAA,OAASA,kDAAyB;IAAA,EAAC;IAACA,iBAAC;IAAAA,iBAAS;;;;IAAxFA,eAAkC;IAAlCA,sEAAkC;;;ACFxC,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAHlC,cAAS,GAAc,EAAE;IACzB,eAAU,GAAW,EAAE;EAGvB;EAEA;EACA;EACA;EACA;EACA;EAEAC,UAAU;IACR,IAAI,CAACD,cAAc,CAACE,aAAa,CAAC,IAAI,CAACC,UAAU,CAAC,CAACC,SAAS,CAAEC,OAAO,IAAI;MACvE,IAAI,CAACC,SAAS,CAACC,IAAI,CAACF,OAAO,CAAC;MAC5B,IAAI,CAACF,UAAU,GAAG,EAAE;IACtB,CAAC,CAAC;EACJ;EAEAK,aAAa,CAACC,UAAkB;IAC9B,IAAI,CAACT,cAAc,CAACQ,aAAa,CAACC,UAAU,CAAC,CAACL,SAAS,CAAEM,IAAI,IAAI;MAC/D,IAAI,CAACJ,SAAS,GAAG,IAAI,CAACA,SAAS,CAACK,MAAM,CAAEN,OAAO,IAAKA,OAAO,CAACO,EAAE,KAAKH,UAAU,CAAC;IAChF,CAAC,CAAC;EACJ;;AAxBWX,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT/BpB,0BAAI;MAAAA,0BAAU;MAAAA,iBAAK;MAEnBA,8BAAuB;MAQnBA,iEAEK;MACPA,iBAAK;;;MAHqBA,eAAY;MAAZA,uCAAY","names":["i0","CompaniesComponent","constructor","companyService","addCompany","createCompany","newCompany","subscribe","company","companies","push","deleteCompany","company_id","data","filter","id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Asus\\Web Dev\\lab10\\hh-front\\src\\app\\companies\\companies.component.html","C:\\Users\\Asus\\Web Dev\\lab10\\hh-front\\src\\app\\companies\\companies.component.ts"],"sourcesContent":["<h1>Categories</h1>\n\n<div class=\"companies\">\n<!--  <fieldset>-->\n<!--    <label>Category name: </label>-->\n<!--    <input type=\"text\" [(ngModel)]=\"newCompany\">-->\n<!--    <button (click)=\"addCompany()\">Add company</button>-->\n<!--  </fieldset>-->\n\n  <ul>\n    <li *ngFor=\"let company of companies\">\n      {{company.id}} - {{company.name}} <button (click)=\"deleteCompany(company.id)\">X</button>\n    </li>\n  </ul>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Company} from \"../models\";\nimport {CompanyService} from \"../services/company.service\";\n\n@Component({\n  selector: 'app-companies',\n  templateUrl: './companies.component.html',\n  styleUrls: ['./companies.component.css']\n})\nexport class CompaniesComponent{\n  companies: Company[] = [];\n  newCompany: string = '';\n\n  constructor(private companyService: CompanyService) {\n  }\n\n  // ngOnInit() {\n  //   this.companyService.getCompanies().subscribe((companies) => {\n  //     this.companies = companies;\n  //   });\n  // }\n\n  addCompany() {\n    this.companyService.createCompany(this.newCompany).subscribe((company) => {\n      this.companies.push(company);\n      this.newCompany = '';\n    });\n  }\n\n  deleteCompany(company_id: number) {\n    this.companyService.deleteCompany(company_id).subscribe((data) => {\n      this.companies = this.companies.filter((company) => company.id !== company_id);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}